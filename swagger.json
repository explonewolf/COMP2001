{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/EXPLONEWOLF/Comp2001/1.0.0"
    },
    {
      "description": "Your Server Description",
      "url": "https://dist-6-505.uopnet.plymouth.ac.uk"
    },
    {
      "description": "API",
      "url": "https://web.socem.plymouth.ac.uk/COMP2001/auth/api"
    }
  ],
  "info": {
    "version": "1.0.0",
    "title": "COMP2001 API",
    "description": "Your API description here."
  },
  "security": [
    {
      "password": [ "read", "write" ]
    }
  ],
  "paths": {
    "/example": {
      "get": {
        "summary": "Server example operation",
        "description": "This is an example operation to show how security is applied to the call.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Server heartbeat operation",
        "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "security": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "User login",
        "description": "Log in a user using User Name, Email, and Password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (login successful)"
          },
          "401": {
            "description": "Unauthorized (login failed)"
          }
        }
      }
    },
    "/usersas": {
      "get": {
        "summary": "Get all user profiles",
        "description": "Retrieve a list of user profiles.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/profiles/{id}": {
      "get": {
        "summary": "Get a user profile by ID",
        "description": "Retrieve a user profile by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user profile",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/profiles/create": {
      "post": {
        "summary": "Create a new user profile",
        "description": "Create a new user profile.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/profiles/update/{id}": {
      "put": {
        "summary": "Update a user profile by ID",
        "description": "Update an existing user profile by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user profile",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/profiles/delete/{id}": {
      "delete": {
        "summary": "Delete a user profile by ID",
        "description": "Delete a user profile by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user profile",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserProfile": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer",
            "format": "int64"
          },
          "Username": {
            "type": "string"
          },
          "TwoFactorAuth": {
            "type": "boolean"
          },
          "Phone": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "DOB": {
            "type": "string",
            "format": "date"
          },
          "Email": {
            "type": "string"
          },
          "ProfilePicture": {
            "type": "string"
          },
          "FriendUserID": {
            "type": "integer",
            "format": "int64"
          },
          "WalksComplete": {
            "type": "integer",
            "format": "int64"
          },
          "WalksNotFinished": {
            "type": "integer",
            "format": "int64"
          },
          "LastWalk": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedTrialID": {
            "type": "integer",
            "format": "int64"
          },
          "CreatedTrialName": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "password": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://web.socem.plymouth.ac.uk/COMP2001/auth",
            "scopes": {
              "write": "allows modifying resources",
              "read": "allows reading resources"
            }
          }
        }
      }
    }
  }
}